{"version":3,"sources":["assets/me.jpg","containers/Home.js","Firebase.js","components/FoodPostList.js","containers/Food.js","components/Resume.js","containers/Projects.js","Routes.js","components/Nav.js","components/Footer.js","index.js"],"names":["module","exports","Home","className","href","role","aria-label","src","me","alt","firebase","initializeApp","firebaseConfig","analytics","firestore","resumeItems","collection","getResumeItems","a","async","get","snapshot","empty","docs","map","doc","result","data","date","toDate","start","end","FoodPostList","Food","PRESENT","present","formatDate","toLocaleDateString","year","month","ResumeItem","props","dateString","itemClassName","appendedClasses","reduce","prev","curr","date1","date2","title","children","ProjectItem","blurb","projectLink","target","ExperienceItem","EducationItem","school","gpa","classes","Resume","state","experiences","projects","organizations","education","items","this","setState","filter","item","type","sort","b","length","i","key","exp","project","Component","Projects","RouteObject","path","name","child","color","isIndex","routes","Nav","location","pathname","find","routeObj","includes","expanded","info","onClick","handleHamburgerClick","to","handleLinkClick","withRouter","EMAIL","ICONS","link","icon","Footer","iconInfo","PureComponent","FooterIcon","library","add","fas","fab","AnimatedRoutes","TransitionGroup","component","CSSTransition","classNames","timeout","exact","MyRoutes","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e57af92e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.ff6e4817.jpg\";","import React from \"react\"\n\nimport \"../styles/Home.scss\"\nimport me from \"../assets/me.jpg\"\n\nfunction Home () {\n\n    return (\n        <div className=\"body\">\n            <div className=\"hero\">\n               <div className=\"contentWrap\">\n                    <div className=\"hero__title\">Hi, I'm Lawrence.</div>\n                    <div className=\"hero__subtitle\">(But Call Me Larry)</div>\n                    <div className=\"divider dandelion\"></div>\n                    <p className=\"big white\">You can download and view my resume by <a href=\"https://github.com\">clicking this link</a>.</p>\n                </div> \n            </div>\n            <div className=\"substance\">\n                <div className=\"contentWrap\">\n                    <h2>About Me</h2>\n                    <div className=\"substance__flexWrap\">\n                        <div className=\"substance__text\">\n                            <p className=\"big\">My full name is Lawrence Jefferson Win, but I tend to go by Larry. I study computer science at <span className=\"hookem\">UT Austin <span role=\"img\" aria-label=\"hookem emoji\">ðŸ¤˜</span></span> and am a part of the class of 2022. I'm a full stack web developer with a few projects under my belt, and I'm open to learning tons of new technologies!</p>\n                            <p className=\"big\">In my free time, I'm a political junkie, an aspiring Burmese cook, and a Silver 2 Rumble Main in League of Legends (add me @dehunter456)!</p>\n                        </div>\n                        <div className=\"substance__image\">\n                            <img src={me} alt=\"My beautiful face.\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n    \n}\n\nexport default Home","import firebase from \"firebase\"\nimport firebaseConfig from \"./assets/firebaseConfig.json\"\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig)\nfirebase.analytics()\n\nconst firestore = firebase.firestore()\n\nconst resumeItems = firestore.collection(\"resumeItems\")\nconst foodPosts = firestore.collection(\"food\")\n\nasync function getResumeItems () {\n\tconst snapshot = await resumeItems.get()\n\tif (snapshot.empty) {\n\t\treturn null\n\t} \n\treturn snapshot.docs.map(doc => {\n\t\tconst result = doc.data()\n\t\tif (result.date) {\n\t\t\tresult.date = result.date.toDate()\n\t\t}\n\t\tif (result.start) {\n\t\t\tresult.start = result.start.toDate()\n\t\t}\n\t\tif (result.end) {\n\t\t\tresult.end = result.end.toDate()\n\t\t}\n\t\treturn result\n\t})\n}\n\nasync function getFoodPosts () {\n\tconst snapshot = await foodPosts.get()\n\treturn !snapshot.empty ? snapshot.docs.map(doc => {\n\t\tconst result = {\n\t\t\ttitle: doc.get(\"title\"),\n\t\t\tthumbnail: doc.get(\"thumbnail\"),\n\t\t\tdate: doc.get(\"date\").toDate(),\n\t\t\tid: doc.id\n\t\t}\n\t\treturn result\n\t}) : null\n}\n\nasync function getFoodPostById (id) {\n\tconst snapshot = await foodPosts.doc(id).get()\n\tconst result = snapshot.data()\n\tresult.date = result.date.toDate()\n\treturn result\n}\n\nexport { getResumeItems, getFoodPosts, getFoodPostById } \n\n","import React, { useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport { getFoodPosts } from \"../Firebase\"\nimport \"../styles/Food.scss\"\n\n// Need a FoodPosts component and individual post component\n// Post links to variable route\n\n\nfunction PostThumb (props) {\n\n    return (\n        <Link to={`/food/${props.id}`} className=\"foodPostThumb\">\n            <img src={props.thumbnail} className=\"foodPostThumb__image\" alt={`thumbnail of ${props.title}`} />\n            <div className=\"foodPostThumb__label\">{props.title}</div>\n        </Link>\n    )\n\n}\n\nfunction FoodPostList (props) {\n\n    const [ posts, setPosts ] = useState([])\n    \n    // Equivalent to componentDidMount\n    useEffect(() => {\n        getFoodPosts()\n        .then(result => {\n            setPosts(result)\n        })\n        // Get the posts from the api\n    }, [])\n\n    return (\n        <div className=\"foodPosts\">\n            {posts.map((post, i) => {\n                return <PostThumb \n                        title={post.title} \n                        thumbnail={post.thumbnail} \n                        id={post.id}\n                        />\n            })}\n        </div>\n    )\n\n}\n\nexport default FoodPostList","import React from \"react\"\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\"\n\nimport FoodPostList from \"../components/FoodPostList\"\nimport FoodPost from \"../components/FoodPost\"\n\nimport \"../styles/Home.scss\"\n\nfunction Food () {\n\n    const { path } = useRouteMatch()\n\n    return (\n        <Switch>\n            <Route exact path={path}>\n                <FoodDefault />\n            </Route>\n            <Route path={`${path}/:id`}>\n                <FoodPost />\n            </Route>\n        </Switch>\n    )\n\n}\n\nfunction FoodDefault () {\n    return (\n        <div className=\"body\">\n            <div className=\"hero yellow\">\n               <div className=\"contentWrap\">\n                    <div className=\"hero__title\">Food Pictures</div>\n                    <div className=\"divider dandelion\"></div>\n                    <p className=\"big white\">Food I've eaten that I really really enjoy.</p>\n                </div> \n            </div>\n            <div className=\"substance\">\n                <div className=\"contentWrap\">\n                    <FoodPostList />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Food","import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { getResumeItems } from \"../Firebase.js\"\nimport \"../styles/Resume.scss\"\n\nconst PRESENT = { present: \"PRESENT\" }\n\nfunction formatDate (date) {\n    if (date === PRESENT ) {\n        return \"Present\"\n    }\n    return date.toLocaleDateString(\"en\", {\n        year: \"numeric\",\n        month: \"long\"\n    })\n}\n\nfunction ResumeItem (props) {\n    let itemClassName = \"resumeItem\"\n    if (props.appendedClasses) {\n        itemClassName += \" \" + props.appendedClasses.reduce((prev, curr) => {\n            (prev)\n            (curr)\n            return `${prev} ${curr}`\n        })\n    }\n    let dateString\n    if (props.date1 && props.date2) {\n        // Put date range here\n        dateString = `${formatDate(props.date1)} â€” ${formatDate(props.date2)}`\n    } else {\n        // Put single date here\n        dateString = `${formatDate(props.date1)}`\n    }\n    return (\n            <div className={ itemClassName } >\n                <div className=\"resumeItem__header\">\n                    <div className=\"resumeItem__title\">{props.title}</div>\n                    <div className=\"resumeItem__date\">{dateString}</div>\n                </div>\n                <div className=\"resumeItem__body\">\n                    {props.children}\n                </div>\n            </div>\n    )\n}\n\nResumeItem.propTypes = {\n    appendedClasses: PropTypes.array,\n    date1: PropTypes.object,\n    date2: PropTypes.object,\n    title: PropTypes.string.isRequired\n}\n\nfunction ProjectItem (props) {\n    return (\n        <ResumeItem\n            title={props.title}\n            date1={props.date}\n            appendedClasses={[\"project\"]}\n        >\n            <div className=\"resumeItem__blurb\">\n                <div>{props.blurb}</div>\n                { props.projectLink ? <a href={props.projectLink} target=\"noreferrer noopener\">View Project</a> : null }\n            </div>\n        </ResumeItem>\n    )\n}\n\nProjectItem.propTypes = {\n    title: PropTypes.string.isRequired,\n    date: PropTypes.object.isRequired,\n    blurb: PropTypes.string.isRequired,\n    projectLink: PropTypes.string\n}\n\nfunction ExperienceItem (props) {\n    return (\n        <ResumeItem\n            title={props.title}\n            date1={props.start}\n            date2={props.end ? props.end : null}\n            appendedClasses={[\"experience\"]}\n        >\n            <div className=\"resumeItem__blurb\">{props.blurb}</div>\n            { props.projectLink ? <a href={props.projectLink} target=\"noreferrer noopener\">View Project</a> : null }\n        </ResumeItem>\n    )\n}\n\nExperienceItem.propTypes = {\n    title: PropTypes.string.isRequired,\n    start: PropTypes.object.isRequired,\n    end: PropTypes.object,\n    blurb: PropTypes.string.isRequired,\n    projectLink: PropTypes.string\n}\n\nfunction EducationItem (props) {\n    return (\n        <ResumeItem\n            title={props.school}\n            date1={props.start}\n            date2={props.end ? props.end : null}\n            appendedClasses={[\"education\"]}\n        >\n            <div className=\"resumeItem__blurb\">\n                <div className=\"education__gpa\">Cumulative GPA: {props.gpa}</div>\n                <div className=\"education__classes\">Classes: {props.classes.reduce((prev, curr) => prev + \", \" + curr)}</div>\n            </div>\n        </ResumeItem>\n    )\n}\n\nEducationItem.propTypes = {\n    school: PropTypes.string.isRequired,\n    start: PropTypes.object.isRequired,\n    end: PropTypes.object,\n    gpa: PropTypes.number.isRequired,\n    classes: PropTypes.array.isRequired\n}\n\nclass Resume extends Component {\n\n    constructor (props) {\n        super(props)\n        this.state = {\n            experiences: [],\n            projects: [],\n            organizations: [], \n            education: []\n        }\n    }\n\n    async componentDidMount () {\n        const items = await getResumeItems()\n        this.setState({\n            experiences: items.filter(item => item.type === \"experience\").sort((a, b) => b.start - a.start),\n            projects: items.filter(item => item.type === \"project\").sort((a, b) => b.date - a.date),\n            organizations: items.filter(item => item.type === \"organization\").sort((a, b) => b.start - a.start),\n            education: items.filter(item => item.type === \"education\").sort((a, b) => b.start - a.start)\n        })\n    }\n\n    render () {\n        const { experiences, projects, organizations, education } = this.state\n        return (\n            <div className=\"resume\">\n                { education.length > 0 ? (<div className=\"resume__education\">\n                    <h2>Education</h2>\n                    { education.map((education, i) => {\n                        return (\n                        <EducationItem\n                            key={i} \n                            school={education.school}\n                            start={education.start} \n                            end={education.end}\n                            gpa={education.gpa} \n                            classes={education.classes}\n                        />)\n                    }) }\n                </div>) : null }\n                { experiences.length > 0 ? (<div className=\"resume__experience\">\n                    <h2>Work Experience</h2>\n                    { experiences.map((exp, i) => {\n                        return (\n                        <ExperienceItem \n                            key={i} \n                            title={exp.title}\n                            start={exp.start} \n                            end={exp.end ? exp.end : PRESENT}\n                            blurb={exp.blurb} \n                            projectLink={exp.projectLink}\n                        />)\n                    }) }\n                </div>) : null}\n                { projects.length > 0 ? (<div className=\"resume__projects\">\n                    <h2>Projects</h2>\n                    { projects.map((project, i) => {\n                        return (\n                        <ProjectItem \n                            key={i} \n                            title={project.title}\n                            date={project.date} \n                            blurb={project.blurb} \n                            projectLink={project.projectLink}\n                        />)\n                    }) }\n                </div>) : null }\n                { organizations.length > 0 ? (<div className=\"resume__experience\">\n                    <h2>Organizations</h2>\n                    { organizations.map((exp, i) => {\n                        return (\n                        <ExperienceItem \n                            key={i} \n                            title={exp.title}\n                            start={exp.start} \n                            end={exp.end ? exp.end : PRESENT}\n                            blurb={exp.blurb} \n                            projectLink={exp.projectLink}\n                        />)\n                    }) }\n                </div>) : null }\n            </div>\n        )\n    }\n\n}\n\nexport default Resume","import React from \"react\"\n\nimport Resume from \"../components/Resume\"\nimport \"../styles/Home.scss\"\n\nfunction Projects () {\n\n    return (\n        <div className=\"body\">\n            <div className=\"hero red\">\n               <div className=\"contentWrap\">\n                    <div className=\"hero__title\">My Projects</div>\n                    <div className=\"divider dandelion\"></div>\n                    <p className=\"big white\">A list of projects I like showing off. Basically a super fancy resume that doesn't kill trees.</p>\n                </div> \n            </div>\n            <div className=\"substance\">\n                <div className=\"contentWrap\">\n                    <Resume />\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Projects","import React from \"react\"\nimport Home from \"./containers/Home\"\nimport Food from \"./containers/Food\"\nimport Projects from \"./containers/Projects\"\n\nclass RouteObject {\n    constructor (path, name, child, color, isIndex = false) {\n        this.path = path\n        this.name = name\n        this.child = child\n        this.color = color\n        this.isIndex = isIndex\n    }\n}\n\nconst routes = [\n    new RouteObject(\"/\", \"Home\", <Home />, \"black\", true),\n    new RouteObject(\"/projects\", \"Projects\", <Projects />, \"red\"),\n    //new RouteObject(\"/food\", \"My Food\", <Food />, \"yellow\")\n]\n\nexport default routes","import React, { Component } from \"react\"\nimport { NavLink as Link, withRouter } from \"react-router-dom\"\n\nimport routes from \"../Routes\"\nimport \"../styles/Nav.scss\"\n\nclass Nav extends Component {\n\n    constructor (props) {\n        super(props)\n        const location = this.props.location\n        let curr\n        if (location.pathname === \"/\") {\n            curr = routes[0]\n        } else {\n            curr = routes.find((routeObj, i) => {\n                if (i > 0) {\n                    return location.pathname.includes(routeObj.path)\n                } else {\n                    return false\n                }\n            })\n        }\n        this.state = {\n            curr: curr,\n            expanded: false\n        }\n    }\n\n    handleLinkClick (info) {\n        this.setState({ curr: info, expanded: false })\n    }\n\n    handleHamburgerClick () {\n        const prev = this.state.expanded\n        this.setState({ expanded : !prev })\n    }\n\n    render () {\n        const { curr, expanded } = this.state\n        return (\n            <div className={`nav ${curr.color}`}>\n                <div className=\"nav__flexCon\">\n                    <div className=\"nav__hamburgerCon\">\n                        <div className={ expanded ? \"nav__hamburger on\" : \"nav__hamburger\" } onClick={() => this.handleHamburgerClick()}>\n                            <div className=\"nav__hamburgerBar\"></div>\n                            <div className=\"nav__hamburgerBar\"></div>\n                            <div className=\"nav__hamburgerBar\"></div>\n                        </div>\n                    </div>\n                    <div className={ expanded ? \"nav__options expanded\" : \"nav__options\"}>\n                        {routes.map((routeObj, i) => {\n                            return <Link key={i} to={routeObj.path} onClick={() => this.handleLinkClick(routeObj)}>{routeObj.name}</Link>\n                        })}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default withRouter(Nav)","import React, { PureComponent } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nimport \"../styles/Footer.scss\"\n\nconst EMAIL = \"lawrence.j.win@gmail.com\"\nconst ICONS = [\n    { link: \"https://github.com/lawrencewin\", icon: [\"fab\", \"github\"] },\n    { link: \"https://www.linkedin.com/in/lawrence-win\", icon: [\"fab\", \"linkedin\"] },\n    { link: \"https://www.instagram.com/larry.lose/\", icon: [\"fab\", \"instagram\"] },\n    { link: \"https://twitter.com/larrywin1\", icon: [\"fab\", \"twitter\"] }\n]\n\nclass Footer extends PureComponent {\n\n    render () {\n        return (\n            <div className=\"footer\">\n                <div className=\"footer_email\">\n                    <a href={\"mailto:\" + EMAIL}>{EMAIL}</a>\n                </div>\n                <div className=\"footer__iconLinks\">\n                    { ICONS.map( (iconInfo, i) => <FooterIcon key={i} link={iconInfo.link} icon={iconInfo.icon} /> ) }\n                </div>\n            </div>\n        )\n    }\n\n}\n\nclass FooterIcon extends PureComponent {\n\n    render () {\n        return (\n            <a href={this.props.link} className=\"footer__iconLink\" target=\"noreferrer noopener\">\n                <FontAwesomeIcon icon={this.props.icon} className=\"footer__icon\" />\n            </a>\n        )\n    }\n\n}\n\nexport default Footer","import React, { Component } from \"react\"\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch, withRouter } from \"react-router-dom\"\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\"\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport Nav from \"./components/Nav\"\nimport Footer from \"./components/Footer\"\n\nimport routes from \"./Routes\"\n\n// Adding icons for fontawesome\n\nlibrary.add(fas, fab)\n\nclass AnimatedRoutes extends Component {\n\n    render () {\n        const location = this.props.location\n        return (\n            <TransitionGroup component={null}>\n                <CSSTransition\n                    key={location.key}\n                    classNames=\"fadeIn\"\n                    timeout={500}\n                >\n                    <Switch location={location}>\n                        { routes.map((routeObj) => {\n                            if (routeObj.isIndex) {\n                                return (\n                                    <Route exact path={routeObj.path}>\n                                        { routeObj.child }\n                                    </Route>\n                                )\n                            }\n                            return (\n                                <Route path={routeObj.path}>\n                                    { routeObj.child }\n                                </Route>\n                            )\n                        }) }\n                    </Switch>\n                </CSSTransition>\n            </TransitionGroup>\n        )\n    }\n\n}\n\nconst MyRoutes = withRouter(AnimatedRoutes)\n\nclass App extends Component {\n\n    render () {\n        return (\n            <Router>\n                <Nav />\n                <MyRoutes />\n                <Footer />\n            </Router>\n        )\n    }\n\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}